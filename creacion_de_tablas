Creacion de tablas

issues
id_issue
issues

beeline -u jdbc:hive2://10.128.0.9:10000/
create database trabajo4;

use trabajo4;
CREATE EXTERNAL TABLE IF NOT EXISTS trabajo4.issues(
id_issue string COMMENT 'Id_issue',
issues string COMMENT 'Issues'
)
COMMENT 'Tabla Issues'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
LOCATION '/carpeta4/issues'
tblproperties("skip.header.line.count" = "1");



company
id_company
company_name


use trabajo4;
CREATE EXTERNAL TABLE IF NOT EXISTS trabajo4.company(
id_company string COMMENT 'Id_company',
company_name string COMMENT 'Company_name',
id_company_company_name struct<id_company:STRING,company_name:string> COMMENT 'Id_company_company_name'
)
COMMENT 'Tabla Company'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
COLLECTION ITEMS TERMINATED BY ','
MAP KEYS TERMINATED BY ':'
LOCATION '/carpeta4/company'
tblproperties("skip.header.line.count" = "1");




State
id_state
state
id_state_state

use trabajo4;
CREATE EXTERNAL TABLE IF NOT EXISTS trabajo4.state(
id_state string COMMENT 'Id_state',
state string COMMENT 'State',
id_state_state struct<id_state:STRING,state:string> COMMENT 'Id_state_state'
)
COMMENT 'Tabla State'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
COLLECTION ITEMS TERMINATED BY ','
MAP KEYS TERMINATED BY ':'
LOCATION '/carpeta4/state'
tblproperties("skip.header.line.count" = "1");



Complaints
date_received
id_issue
id_company
id_state
consumer_consent_provided
submitted_via
date_sent_to_company
company_response_to_consumer
timely_response


Fecha date,
IdProducto string,
Unidades integer

use trabajo4;
CREATE EXTERNAL TABLE IF NOT EXISTS trabajo4.complaints(
date_received date COMMENT 'Date_received',
id_issue string COMMENT 'Id_issue',
id_company string COMMENT 'Id_company',
id_state string COMMENT 'Id_state',
consumer_consent_provided string COMMENT 'Consumer_consent_provided',
submitted_via string COMMENT 'Submitted_via',
date_sent_to_company date COMMENT 'Date_sent_to_company',
company_response_to_consumer string COMMENT 'Company_response_to_consumer',
timely_response string COMMENT 'Timely_response'
)
COMMENT 'Tabla Complaints'
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE
LOCATION '/carpeta4/complaints'
tblproperties("skip.header.line.count" = "1");




**********************

hdfs dfs -put state.csv /carpeta4/state/
hdfs dfs -put company.csv /carpeta4/company/
hdfs dfs -put issues.csv /carpeta4/issues/
hdfs dfs -put complaints.csv /carpeta4/complaints/





***********************


 # PARTICION ESTATICA

CREATE EXTERNAL TABLE trabajo4.tabla_particion_estatica
(
   date_received date COMMENT 'Date_received',
   id_issue string COMMENT 'Id_issue',
   id_company string COMMENT 'Id_company',
   id_state string COMMENT 'Id_state',
   consumer_consent_provided string COMMENT 'Consumer_consent_provided',
   submitted_via string COMMENT 'Submitted_via',
   date_sent_to_company date COMMENT 'Date_sent_to_company',
   company_response_to_consumer string COMMENT 'Company_response_to_consumer',
   timely_response string COMMENT 'Timely_response'
)
PARTITIONED BY (mensual STRING)
STORED AS PARQUET
LOCATION '/carpeta4/complaints_part_esta/tabla_particion_estatica';



insert into trabajo4.tabla_particion_estatica partition(mensual = '201211')
select 
from_unixtime (unix_timestamp(Concat(substring(date_received,1,4),SUBSTRING(date_received,5,2), SUBSTRING(date_received,7,2)), 'yyyyMMdd'), 'yyyy-MM-dd') as date_received,
id_issue, 
id_company, 
id_state, 
consumer_consent_provided, 
submitted_via, 
from_unixtime (unix_timestamp(Concat(substring(date_sent_to_company,1,4),SUBSTRING(date_sent_to_company,5,2), SUBSTRING(date_sent_to_company,7,2)), 'yyyyMMdd'), 'yyyy-MM-dd') as date_sent_to_company,
company_response_to_consumer, 
timely_response 
from trabajo4.complaints where date_received like '2012-11-%';



****************************************


 # PARTICION DINAMICA


CREATE EXTERNAL TABLE trabajo4.tabla_particion_dinamica
(
   id_issue string COMMENT 'Id_issue',
   id_company string COMMENT 'Id_company',
   id_state string COMMENT 'Id_state',
   consumer_consent_provided string COMMENT 'Consumer_consent_provided',
   submitted_via string COMMENT 'Submitted_via',
   date_sent_to_company date COMMENT 'Date_sent_to_company',
   company_response_to_consumer string COMMENT 'Company_response_to_consumer',
   timely_response string COMMENT 'Timely_response'
)
PARTITIONED BY (date_received STRING)
STORED AS PARQUET
LOCATION '/carpeta4/complaints_part_dina/tabla_particion_dinamica';


set hive.exec.dynamic.partition.mode=nonstrict;


insert into trabajo4.tabla_particion_dinamica partition(date_received)
select 
id_issue, 
id_company, 
id_state, 
consumer_consent_provided, 
submitted_via, 
from_unixtime (unix_timestamp(Concat(substring(date_sent_to_company,1,4),SUBSTRING(date_sent_to_company,5,2), SUBSTRING(date_sent_to_company,7,2)), 'yyyyMMdd'), 'yyyy-MM-dd') as date_sent_to_company,
company_response_to_consumer, 
timely_response,
from_unixtime (unix_timestamp(Concat(substring(date_received,1,4),SUBSTRING(date_received,5,2), SUBSTRING(date_received,7,2)), 'yyyyMMdd'), 'yyyy-MM-dd') as date_received
from trabajo4.complaints where date_received like '2012-0%';


****************************************


 # BUCKING


CREATE EXTERNAL TABLE IF NOT EXISTS trabajo4.company_buckets (
id_company string COMMENT 'Id_company',
company_name string COMMENT 'Company_name',
id_company_company_name struct<id_company:STRING,company_name:string> COMMENT 'Id_company_company_name'
)
CLUSTERED BY (company_name) INTO 2 BUCKETS
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
COLLECTION ITEMS TERMINATED BY ','
MAP KEYS TERMINATED BY ':'
LOCATION '/carpeta4/company_buck/tabla_bucketing';



set map.reduce.tasks = 2;
set hive.enforce.bucketing = true;
INSERT OVERWRITE TABLE trabajo4.company_buckets SELECT * FROM trabajo4.company;
