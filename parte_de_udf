parte_de_udf

# COPIAMOS EL CONTENIDO DE UNA TABLA Y LO CONVERTIMOS EN DATAFRAME
val df_tablon_udf = spark.read.table("trabajo4.tablon");


scala> df_tablon_udf.show(1)
+-------------+--------------+------------+-----+-------------------------+-------------+--------------------+----------------------------+---------------+
|date_received|        issues|company_name|state|consumer_consent_provided|submitted_via|date_sent_to_company|company_response_to_consumer|timely_response|
+-------------+--------------+------------+-----+-------------------------+-------------+--------------------+----------------------------+---------------+
|   2013-05-23|Payoff process|    Citibank|   IL|                      N-A|          Web|          2013-05-23|        Closed with expla...|      VERDADERO|
+-------------+--------------+------------+-----+-------------------------+-------------+--------------------+----------------------------+---------------+
only showing top 1 row

scala> df_tablon_udf.printSchema()
root
 |-- date_received: date (nullable = true)
 |-- issues: string (nullable = true)
 |-- company_name: string (nullable = true)
 |-- state: string (nullable = true)
 |-- consumer_consent_provided: string (nullable = true)
 |-- submitted_via: string (nullable = true)
 |-- date_sent_to_company: date (nullable = true)
 |-- company_response_to_consumer: string (nullable = true)
 |-- timely_response: string (nullable = true)



# CREAMOS LA FUNCIÓN
val upper: String => String = _.toUpperCase

# PASAMOS LA FUNCIÓN A UDF
import org.apache.spark.sql.functions.udf
val upperUDF = udf(upper)


# EJECUTAMOS LA FUNCION EN EL DATAFRAME
scala> df_tablon_udf.withColumn("upper", upperUDF('issues)).show(1)
+-------------+--------------+------------+-----+-------------------------+-------------+--------------------+----------------------------+---------------+--------------+
|date_received|        issues|company_name|state|consumer_consent_provided|submitted_via|date_sent_to_company|company_response_to_consumer|timely_response|         upper|
+-------------+--------------+------------+-----+-------------------------+-------------+--------------------+----------------------------+---------------+--------------+
|   2013-05-23|Payoff process|    Citibank|   IL|                      N-A|          Web|          2013-05-23|        Closed with expla...|      VERDADERO|PAYOFF PROCESS|
+-------------+--------------+------------+-----+-------------------------+-------------+--------------------+----------------------------+---------------+--------------+
only showing top 1 row

scala> df_tablon_udf.withColumn("upper", upperUDF('issues)).printSchema()
root
 |-- date_received: date (nullable = true)
 |-- issues: string (nullable = true)
 |-- company_name: string (nullable = true)
 |-- state: string (nullable = true)
 |-- consumer_consent_provided: string (nullable = true)
 |-- submitted_via: string (nullable = true)
 |-- date_sent_to_company: date (nullable = true)
 |-- company_response_to_consumer: string (nullable = true)
 |-- timely_response: string (nullable = true)
 |-- upper: string (nullable = true)


scala>
